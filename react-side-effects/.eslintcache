[{"C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\index.js":"1","C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\App.js":"2","C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\Home\\Home.js":"3","C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\MainHeader\\MainHeader.js":"4","C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\Login\\Login.js":"5","C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\MainHeader\\Navigation.js":"6","C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\UI\\Card\\Card.js":"7","C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\UI\\Button\\Button.js":"8","C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\store\\auth-context.js":"9"},{"size":176,"mtime":1619627901716,"results":"10","hashOfConfig":"11"},{"size":1307,"mtime":1619633216926,"results":"12","hashOfConfig":"11"},{"size":264,"mtime":1619627807402,"results":"13","hashOfConfig":"11"},{"size":383,"mtime":1619627807408,"results":"14","hashOfConfig":"11"},{"size":4441,"mtime":1619627807405,"results":"15","hashOfConfig":"11"},{"size":1194,"mtime":1619633162020,"results":"16","hashOfConfig":"11"},{"size":229,"mtime":1619627807413,"results":"17","hashOfConfig":"11"},{"size":371,"mtime":1619627807411,"results":"18","hashOfConfig":"11"},{"size":132,"mtime":1619627793271,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yyk8ps",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\index.js",[],"C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\App.js",[],"C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\Home\\Home.js",[],["40","41"],"C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\MainHeader\\MainHeader.js",[],"C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\Login\\Login.js",["42"],"import React, {useEffect, useReducer, useState} from 'react';\r\n\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Login.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst emailReducer = (state, action) => {\r\n    if (action.type === 'USER_INPUT') {\r\n        return {value: action.val, isValid: action.val.includes('@')};\r\n    }\r\n\r\n    if (action.type === 'INPUT_BLUR') {\r\n        return {value: state.value, isValid: state.value.includes('@')};\r\n    }\r\n\r\n    return {value: '', isValid: false}\r\n};\r\n\r\nconst passwordReducer = (state, action) => {\r\n    if (action.type === 'USER_INPUT') {\r\n        return {value: action.val, isValid: action.val.trim().length > 6};\r\n    }\r\n\r\n    if (action.type === 'INPUT_BLUR') {\r\n        return {value: state.value, isValid: state.value.trim().length > 6};\r\n    }\r\n\r\n    return {value: '', isValid: false}\r\n}\r\n\r\nconst Login = (props) => {\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\r\n        value: '',\r\n        isValid: false\r\n    });\r\n\r\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\r\n        value: '',\r\n        isValid: false\r\n    })\r\n\r\n    /*useEffect(() => {\r\n        console.log('EFFECT RUNNING');\r\n\r\n        return () => {\r\n            console.log('EFFECT CLEANUP');\r\n        }\r\n    }, [enteredPassword]);*/\r\n\r\n    /*\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n    const [emailIsValid, setEmailIsValid] = useState();\r\n*/\r\n    /*    const [enteredPassword, setEnteredPassword] = useState('');\r\n        const [passwordIsValid, setPasswordIsValid] = useState();*/\r\n\r\n    const {isValid: emailIsValid } = emailState;\r\n    const {isValid: passwordIsValid} = passwordState;\r\n\r\n    useEffect(() => {\r\n        const identifier = setTimeout(() => {\r\n            console.log('Checking for form validity!');\r\n            setFormIsValid(\r\n                emailState.isValid && passwordState.isValid\r\n            );\r\n        }, 500);\r\n\r\n        return () => {\r\n            console.log('CLEANUP');\r\n            clearTimeout(identifier);\r\n        };\r\n\r\n    }, [emailIsValid, passwordIsValid]);\r\n\r\n    const emailChangeHandler = (event) => {\r\n        dispatchEmail({type: 'USER_INPUT', val: event.target.value});\r\n\r\n        /*setFormIsValid(event.target.value.includes('@') && passwordState.isValid);*/\r\n    };\r\n\r\n    const passwordChangeHandler = (event) => {\r\n        dispatchPassword({type: 'USER_INPUT', val: event.target.value});\r\n\r\n        /*setFormIsValid(event.target.value.trim() > 6 && emailState.isValid);*/\r\n    };\r\n\r\n    const validateEmailHandler = () => {\r\n        dispatchEmail({type: 'INPUT_BLUR'})\r\n    };\r\n\r\n    const validatePasswordHandler = () => {\r\n        dispatchPassword({type: 'INPUT_BLUR'});\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        props.onLogin(emailState.value, passwordState.value);\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.login}>\r\n            <form onSubmit={submitHandler}>\r\n                <div\r\n                    className={`${classes.control} ${\r\n                        emailState.isValid === false ? classes.invalid : ''\r\n                    }`}>\r\n                    <label htmlFor=\"email\">E-Mail</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        value={emailState.value}\r\n                        onChange={emailChangeHandler}\r\n                        onBlur={validateEmailHandler}/>\r\n                </div>\r\n                <div\r\n                    className={`${classes.control} ${\r\n                        passwordState.isValid === false ? classes.invalid : ''\r\n                    }`}>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={passwordState.value}\r\n                        onChange={passwordChangeHandler}\r\n                        onBlur={validatePasswordHandler}/>\r\n                </div>\r\n                <div className={classes.actions}>\r\n                    <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\r\n                        Login\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\MainHeader\\Navigation.js",[],"C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\UI\\Card\\Card.js",[],"C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\brunomilitzer\\WebstormProjects\\ReactCourse\\react-side-effects\\src\\store\\auth-context.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":75,"column":8,"nodeType":"49","endLine":75,"endColumn":39,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'emailState.isValid' and 'passwordState.isValid'. Either include them or remove the dependency array.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]",{"range":"56","text":"57"},[2143,2174],"[emailIsValid, emailState.isValid, passwordIsValid, passwordState.isValid]"]